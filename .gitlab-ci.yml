image:
  name: node:latest

# Extends
.prepare_ssh:
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global push.default simple
    - git config --global user.email "gitlab@example.com"
    - git config --global user.name "Gitlab"

.to_dev:
  variables:
    CONTEXT: DEV
  only:
    - /feature\/.*/
    - /bugfix\/.*/

.to_stage:
  variables:
    CONTEXT: STAGE
  only:
    refs:
      - master

.to_prod:
  variables:
    CONTEXT: PRODUCTION
  only: 
    - /v.*/

.install_dependencies: 
  script: 
    - echo 'install_dependencies'
    - yarn --no-progress --frozen-lockfile

.show_context:
  script:
    - echo $CONTEXT

stages:
  - flow
  - tests
  - build
  - bundle_analyzer
  - storybook
  - deploy
  - e2e

# Jobs
flow:
  stage: flow
  script:
    - echo 'check flow'

flow:coverage:
  stage: flow
  script:
    - echo 'flow coverage 100%'

storybook:
  stage: storybook
  extends: 
    - .show_context
  script: 
    - echo 'Build storybook'

bundle_analyzer:
  stage: bundle_analyzer
  extends: 
    - .show_context
  script: 
    - echo 'Bundle analyzer'

build:prod:
  extends: 
    - .install_dependencies
    - .to_prod
    - .show_context
  stage: build

build:stage:
  extends: 
    - .install_dependencies
    - .to_stage
    - .prepare_ssh
    - .show_context
  stage: build
  after_script:
    - git checkout master
    - export CURRENT_HASH=$(echo $(git rev-parse --short HEAD))
    - echo $CURRENT_HASH
    - export COMMIT_MESSAGE="$(echo $(git log -n 1 --pretty=format:%B))"
    - echo $COMMIT_MESSAGE
    - export VERSION_TYPE="patch"
    - export TAG=$(echo $(git tag --contains $CURRENT_HASH))
    - echo $TAG
    #- export VERSION_TYPE=$(node pipelines/get-version-type.js "$COMMIT_MESSAGE")
    - if [ ! -z "$TAG" ] ; then exit 0; fi
    - echo $VERSION_TYPE
    - git --version
    - git status
    - npm version $VERSION_TYPE -m "v%s"
    - git status
    - git push --follow-tags

build:branch:
  extends: 
    - .install_dependencies
    - .to_dev
    - .show_context
  stage: build
  after_script: 
    - echo 'Builded for branch'

build:test-1:
  stage: buil
  extends: .install_dependencies
  when: manual
  after_script: 
    - echo 'Builded for test-1'

deploy:prod:
  stage: deploy
  extends: 
    - .to_prod
    - .show_context
  after_script: 
    - echo 'Deploy to prod'

deploy:stage:
  stage: deploy
  extends: 
    - .to_stage
    - .show_context
  script: 
    - echo 'Deploy to stage'

deploy:branch:
  stage: deploy
  extends: 
    - .to_dev
    - .show_context
  after_script: 
    - echo 'Deploy to branch'

deploy:test-1:
  stage: deploy
  needs: ["build:test-1"]
  script: 
    - echo 'Deploy to test-1'

e2e:
  stage: e2e
  extends: 
    - .to_stage
    - .show_context
  script: 
    - echo 'Bundle analyzer'
    - echo Simulation e2e testing
    - npm run test:ci
  artifacts:
    paths: 
      - coverage
    name: coverage

tests:unit:
  extends: 
    - .install_dependencies
  stage: tests
  after_script: 
    - echo 'Bundle analyzer'
    - echo Simulation e2e testing
    - npm run test:ci
  cache:
    paths: 
      - node_modules 
  artifacts:
    paths: 
      - coverage
    name: coverage