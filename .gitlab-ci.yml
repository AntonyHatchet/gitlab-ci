image:
  name: node:latest

# Extends
.deploy_to_dev:
  environment:
    context: dev
  filters:
    branches:
      only:
        - /feature\/.*/
        - /bugfix\/.*/

.deploy_to_stage:
  environment:
    context: stage
  filters:
    tags:
      only: /v.*/
    branches:
      ignore: /.*/

.deploy_to_production:
  environment:
    context: production
  filters:
    tags:
      only: /v.*/
    branches:
      ignore: /.*/

.install_dependencies: 
  script: 
    - echo 'install_dependencies'
    - yarn --no-progress --frozen-lockfile


stages:
  - flow
  - tests
  - build
  - bundle_analyzer
  - storybook
  - deploy
  - e2e

# Jobs
flow:
  extends: .install_dependencies
  stage: flow
  script:
    - echo 'check flow'

flow:coverage:
  extends: 
    - .install_dependencies
  stage: flow
  script: 
    - echo 'flow coverage 100%'

storybook:
  stage: storybook
  extends: 
    - .install_dependencies
  script: echo 'Build storybook'

bundle_analyzer:
  extends: 
    - .install_dependencies
  stage: bundle_analyzer
  script: echo 'Bundle analyzer'

build:master:
  extends: .install_dependencies
  stage: build
  only:
    refs:
      - master
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global push.default simple
    - git config --global user.email "gitlab@example.com"
    - git config --global user.name "Gitlab"
    - git checkout master
    - export CURRENT_HASH=$(echo $(git rev-parse --short HEAD))
    - echo $CURRENT_HASH
    - export COMMIT_MESSAGE="$(echo $(git log -n 1 --pretty=format:%B))"
    - echo $COMMIT_MESSAGE
    - export VERSION_TYPE="patch"
    - export TAG=$(echo $(git tag --contains $CURRENT_HASH))
    - echo $TAG
    #- export VERSION_TYPE=$(node pipelines/get-version-type.js "$COMMIT_MESSAGE")
    - if [ ! -z "$TAG" ] ; then exit 0; fi
    - echo $VERSION_TYPE
    - git --version
    - git status
    - npm version $VERSION_TYPE -m "v%s"
    - git status
    - git push --follow-tags

deploy:stage:
  stage: deploy
  needs: ["build:master"]
  script: 
    - echo 'Deploy to stage'

e2e:
  extends: 
    - .install_dependencies
  stage: e2e
  script: 
    - echo 'Bundle analyzer'
    - echo Simulation e2e testing
    - npm run test:ci
  needs: ["deploy:stage"]
  artifacts:
    paths: 
      - coverage
    name: coverage

tests:unit:
  extends: 
    - .install_dependencies
  stage: tests
  script: 
    - echo 'Bundle analyzer'
    - echo Simulation e2e testing
    - npm run test:ci
  artifacts:
    paths: 
      - coverage
    name: coverage